@inherits Panel
@page "/findgame"

<root>
    @if (!InLobby)
    {
        <div class="button" @onmousedown=@CreateLobby>Create a game</div>

        <div class="games-list">
            @if (Lobbies == null || Lobbies.Count == 0)
            {
                <div>There are no games right now</div>
            }
            else
            {
                @foreach (var lobby in Lobbies)
                {
                    <LobbyEntry Lobby=@lobby />
                }
            }
        </div>
        <div class="games-list-footer">
            <div class="button" @onmousedown=@RefreshGameList>Refresh</div>
        </div>
    }
    else
    {
        <LobbySetup Lobby=@Lobby />
    }
</root>

@code {
    bool InLobby => Lobby != null && Lobby.IsMember;

    ILobby Lobby;
    List<Sandbox.Menu.ILobby> Lobbies = new();

    protected async void CreateLobby()
    {
        if (InLobby) throw new Exception("why are you still in a lobby");

        Lobby = await Game.Menu.CreateLobbyAsync(8);
        Lobby.OnMemberEnter = OnMemberEntered;
        Lobby.OnMemberLeave = OnMemberLeft;
        Lobby.Map = "facepunch.checkers_park";
        Lobby.SetPlayerInfo(Game.SteamId, new PlayerInfo()
            {
                Name = Game.UserName,
                EloScore = 331,
                Team = CheckersTeam.Red
            });
        StateHasChanged();
    }

    async void RefreshGameList()
    {
        Lobbies.Clear();
        var lobbies = await Game.Menu.QueryLobbiesAsync();
        Lobbies.AddRange(lobbies);
        StateHasChanged();
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(Lobby?.IsMember);
    }

    void OnMemberEntered(Friend friend)
    {
        Lobby.SetPlayerInfo(friend.Id, new PlayerInfo()
            {
                Name = friend.Name,
                Team = CheckersTeam.Spectator,
                EloScore = 661
            });
    }

    void OnMemberLeft(Friend friend)
    {
    }
}
